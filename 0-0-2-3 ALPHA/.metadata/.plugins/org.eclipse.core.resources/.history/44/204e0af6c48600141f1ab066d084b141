package graphics.demo.game;

/* Name: BouncingSquares.java
 * Date: 07/03/2014
 * Author: Benedict Winchester
 * Notes: NOTE denotes code to be corrected,
 * 		FIX denotes code which requires immidate attention
 * 		NB denotes important comments for code readers
 * 		OBS denotes obsolete code or variables which were either removed, or will be :)
 */

import graphics.demo.framework.Game; //Framework for the game
import graphics.demo.framework.Graphics; //Framework for drawing objects
import graphics.demo.framework.Graphics.PixmapFormat; //Framework for drawing the pixmap images
import graphics.demo.framework.Input.TouchEvent; //Framework for touch events arrayList
import graphics.demo.framework.Pixmap; //Framework for interprating images
import graphics.demo.framework.Screen; //Framework for the screen size
import graphics.demo.framework.implementation.AccelerometerHandler;

import java.util.ArrayList; //Imports the ArrayList framework
import java.util.List; //Imports the list framework
import java.util.Random; //Imports the framework for generating random variables

import android.graphics.Color; //A standard list of colors is imported
import android.graphics.Typeface; //The type face fonts are imported from the res folder
/* NB These can be altered by placing the .ttf file in the /res folder and changing NB(1) */

public class Hexaboxes extends Screen { 

//	Variable decleration
	static String versionNumber = "1"; //The current app version number
	public int tester = 0; //Which tester level (0 = nightly, 1 = alpha, 2 = beta, 3 = published)
	
//	This generates a new ArrayList for the values of the square objects
//	ArrayList<Object> shapes = new ArrayList<Object>(); //An array list containing squares, and eventually, all free moving objects

//	This generates the images for the objects
	Graphics g = game.getGraphics();    	
//	public static Pixmap image; //The image of the square
	
    public Hexaboxes(Game game) 
    {    	
        super(game); //Initialises the game
        Assets.font = Typeface.createFromAsset(game.getAssets(), "fonts/roboto-light.ttf"); // NB(1)
    }
    
//	The intro part only takes a couple of seconds and isn't skippable 

	@Override 
    public void update(float deltaTime) 
    {
        update(); //The main update method
//      This is the touch event handling code
        List<TouchEvent> touchEvents = game.getInput().getTouchEvents(); //The arraylist is defined
//      TouchEvent event = touchEvents.get(i); //The touch events are cycled through
        updateDev(); //This method will update the developer information, such as screen orientation etc.

    }

    //just consists of a help screen image
    @Override
    public void present(float deltaTime) 
    {
    	updateDraw();     
//      This code draws the squares onto the screen
    }

    
    public void update() //The main updater method
    {
    	
    }
    
//  The dev update method
    public void updateDev()
    {
    	
    }
    
//	double accelX = game.getInput().getAccelX(); How to grab orrientation
    public void updateDraw()
    {
    	g.drawRect(0, 0, UtilConstants.SCREEN_WIDTH, UtilConstants.SCREEN_HEIGHT, Color.rgb(47,79,79));
    	g.drawText("HEXABOXES", 40, 40, 40, Color.WHITE);
    	devDraw();
    }
    
//  This method will draw the developer information :D
    public void devDraw()
    {
    	
    }

    
    @Override
    public void pause() {

    }

    @Override
    public void resume() {

    }

    @Override
    public void dispose() {

    }
}
